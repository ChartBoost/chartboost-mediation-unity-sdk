name: Compile Unity on Standalone, Android and IOS platforms
description: 'Compiles Unity on Standalone, Android and IOS platforms'
inputs:
  setup-pass:
    description: Setup password for required permissions. Using Github actions secrets is recommended.
    required: false

runs:
  using: "composite"
  
  steps:
    - name: Checkout Branch
      uses: actions/checkout@v3
      with:
        submodules: recursive
        token: ${{ secrets.GITHUBSERVICETOKEN }}

    - name: Setup Unity Editor
      id: unity-install
      uses: ./.github/actions/chartboost-mediation-unity-ci/setup-unity
      timeout-minutes: 60
      with:
        unity-version: ${{ env.UNITY_VERSION }}
        unity-version-changeset: 8c66806a0c04
        unity-modules:
          android
          ios

    - name: Activate Unity License
      id: activate-unity
      uses: ./.github/actions/chartboost-mediation-unity-ci/run-unity
      with:
        unity-executable-path: ${{ env.UNITY_EXE_PATH }}
        setup-pass: ${{ secrets.SETUP_PASS }}
        serial: ${{ secrets.UNITY_SERIAL }}
        username: ${{ secrets.UNITY_USERNAME }}
        password: ${{ secrets.UNITY_PASSWORD }}
    
    # Once we add mor platforms maybe we can run this in a matrix? this is fine for now.
    - name: Check for Compiler Errors in Standalone
      id: unity-compile-standalone
      uses: ./.github/actions/chartboost-mediation-unity-ci/run-unity
      with:
        unity-executable-path: ${{ env.UNITY_EXE_PATH }}
        project-path: ${{ env.PROJECT_PATH }}
        target-platform: standalone

    - name: Check for Compiler Errors in Android
      id: unity-compile-android
      uses: ./.github/actions/chartboost-mediation-unity-ci/run-unity
      with:
        unity-executable-path: ${{ env.UNITY_EXE_PATH }}
        project-path: ${{ env.PROJECT_PATH }}
        target-platform: android

    - name: Check for Compiler Errors in iOS
      id: unity-compile-ios
      uses: ./.github/actions/chartboost-mediation-unity-ci/run-unity
      with:
        unity-executable-path: ${{ env.UNITY_EXE_PATH }}
        project-path: ${{ env.PROJECT_PATH }}
        target-platform: ios

    - name: Run Unity Unit Tests
      id: unity-unit-tests
      uses: ./.github/actions/chartboost-mediation-unity-ci/run-unity
      with:
        unity-executable-path: ${{ env.UNITY_EXE_PATH }}
        project-path: ${{ env.PROJECT_PATH }}
        run-tests: true
        test-results: test-results/results.xml
        test-platform: EditMode
        quit: false

    - name: Publish Test Results
      id: publish-test-results
      uses: EnricoMi/publish-unit-test-result-action/composite@v2
      with:
        files: |
          **/results.xml

    - name: Cleanup Unity Generated Files
      if: always()
      id: unity-cleanup
      uses: ./.github/actions/chartboost-mediation-unity-ci/cleanup-unity
      with:
        setup-pass: ${{ secrets.SETUP_PASS }}

    - name: Return Unity License
      if: always()
      id: return-unity
      uses: ./.github/actions/chartboost-mediation-unity-ci/run-unity
      with:
        unity-executable-path: ${{ env.UNITY_EXE_PATH }}
        setup-pass: ${{ secrets.SETUP_PASS }}
        username: ${{ secrets.UNITY_USERNAME }}
        password: ${{ secrets.UNITY_PASSWORD }}
        return-license: true

    - name: Notify Slack on failure
      if: ${{ failure() }}
      id: notify-slack
      uses: ./.github/actions/chartboost-mediation-unity-ci/notify-slack
      with:
        slack-webhook-url: ${{ secrets.SLACK_NOTIFY_HELIUM_UNITY_SDK_WEBHOOK }}
        workflow-run-id: ${{ github.run_id }}
        workflow-name: ${{ github.workflow }}
        workflow-url: "https://github.com/${{ github.repository }}/actions/runs/${{github.run_id}}"


        
