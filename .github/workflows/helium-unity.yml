name: Helium Unity SDK

on:
  push:
    tags:
      - '[0-9]+.[0-9]+.[0-9]+.*'
  pull_request:
    branches:
      - 'develop'
      - 'main'
  schedule:
    # Scheduled to run Monday - Friday at 9AM UTC which is 2AM PST.
    # * is a special character in YAML so you have to quote this string
    - cron:  '0 9 * * 1-5'
  workflow_dispatch:

env:
  UNITY_VERSION: 2020.3.27f1
  UNITY_EXE_PATH: /Applications/Unity/Hub/Editor/2020.3.27f1/Unity.app/Contents/MacOS/Unity
  DEMO_PATH: com.chartboost.helium.demo

# Cancels any queued or in-progress runs for this branch.
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  tests:
    name: Unity Actions & Unit Testing
    runs-on: [self-hosted]

    steps:
    - name: Checkout branch
      uses: actions/checkout@v3
      with:
        submodules: true

    - name: Setup Unity Editor
      id: unity-install
      uses: ./.github/actions/setup-unity
      timeout-minutes: 60
      with:
        unity-version: ${{ env.UNITY_VERSION }}
        unity-version-changeset: e759542391ea
        unity-modules:
          android
          ios
      env:
        SETUP_PASS: ${{ secrets.SETUP_PASS }}

    - name: Activate Unity License
      id: activate-unity
      uses: ./.github/actions/activate-unity
      with:
        unity-username: ${{ secrets.UNITY_USERNAME }}
        unity-password: ${{ secrets.UNITY_PASSWORD }}
        unity-serial: ${{ secrets.UNITY_SERIAL }}
        unity-path: ${{ env.UNITY_EXE_PATH }}
        setup-pass: ${{ secrets.SETUP_PASS }}

    - name: Check for Compiler Errors
      id: unity-compiler-errors-check
      run:
        "$UNITY_EXE_PATH -batchmode -quit -projectPath $DEMO_PATH -logfile -"

    # this will only tell whether the test succeded or not, we won't have any details as to what went wrong.
    - name: Run Unit Tests
      id: unity-unit-tests
      uses: ./.github/actions/test-unity
      with:
        unity-path: ${{ env.UNITY_EXE_PATH }}
        project-path: ${{ env.DEMO_PATH }}
        setup-pass: ${{ secrets.SETUP_PASS }}

    - name: Return Unity License
      if: always()
      id: return-unity
      uses: ./.github/actions/return-unity
      with:
        unity-username: ${{ secrets.UNITY_USERNAME }}
        unity-password: ${{ secrets.UNITY_PASSWORD }}
        unity-path: ${{ env.UNITY_EXE_PATH }}
        setup-pass: ${{ secrets.SETUP_PASS }}

  compile:
    name: Compile Android Bridge
    runs-on: [self-hosted]
    needs: tests

    steps:
    - name: Checkout Branch
      uses: actions/checkout@v3
      with:
        submodules: true

    - name: Set Up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: gradle

    - name: Grant Execute Permission for Gradlew
      run: chmod +x ./com.chartboost.helium/Android~/gradlew

    - name: Build Android Bridge
      run: ./com.chartboost.helium/Android~/gradlew -p ./com.chartboost.helium/Android~ githubScript

    - name: Grant Execute Permission for Git Bridge Commit
      run: chmod +x ./.github/actions/uploadBridgeChanges.sh

    - name: Check for Android Bridge .jar Changes & Update
      run: ./.github/actions/uploadBridgeChanges.sh
