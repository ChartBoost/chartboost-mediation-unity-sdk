name: Chartboost Mediation Unity SDK

on:
  push:
    tags:
      - '4.*'
  pull_request:
    branches:
      - 'develop'
      - 'main'
      - 'release/*'
  schedule:
    # Scheduled to run Monday - Friday at 9AM UTC which is 2AM PST.
    # * is a special character in YAML so you have to quote this string
    - cron:  '0 9 * * 1-5'
  workflow_dispatch:
    inputs:
      chartboost_mediation_bridge_version:
        description: 'Chartboost Mediation Android Compile Version'
        required: false
        default: null
      only_public:
        description: 'Use only public maven repo'
        required: false
        default: 'false'
env:
  UNITY_VERSION: 2020.3.37f1
  UNITY_EXE_PATH: /Applications/Unity/Hub/Editor/2020.3.37f1/Unity.app/Contents/MacOS/Unity
  PROJECT_PATH: com.chartboost.mediation.demo.upm

# Cancels any queued or in-progress runs for this branch.
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  compile:
    name: Compile Android Bridge
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Branch
      uses: actions/checkout@v3
      with:
        submodules: recursive
        token: ${{ secrets.GITHUBSERVICETOKEN }}

    - name: Set Up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: gradle

    - name: Grant Execute Permission for Gradlew
      run: chmod +x ./com.chartboost.mediation/Android~/gradlew

    - name: Build Android Bridge
      run: ./com.chartboost.mediation/Android~/gradlew -p ./com.chartboost.mediation/Android~ githubScript
      env:
        CHARTBOOST_MEDIATION_VERSION: ${{ github.event.inputs.chartboost_mediation_bridge_version }}
        ONLY_PUBLIC: ${{ github.event.inputs.only_public }}
        JFROG_USER: ${{ secrets.JFROG_USER }}
        JFROG_PASS: ${{ secrets.JFROG_PASS }}

    - name: Upload Android Bridge Changes
      continue-on-error: true
      run: |
        git config user.name ${{ secrets.GIT_USER }}
        git config user.email ${{ secrets.GIT_EMAIL }}
        git add com.chartboost.mediation/Runtime/Plugins/Android/chartboost-mediation-android-bridge.jar
        git commit -m "Updating Chartboost Mediation Unity SDK Android Bridge .jar"
        git push
        
    - name: Generate Nuget Package
      run : nuget pack ./com.chartboost.mediation/Chartboost.CSharp.Mediation.Unity.nuspec  -OutputDirectory ./Nuget -OutputFileNamesWithoutVersion

    - name: Upload Nuget Package
      run : |
        git add Nuget/Chartboost.CSharp.Mediation.Unity.nupkg
        git commit -m "Updating Chartboost.CSharp.Mediation.Unity.nupkg"
        git push
    
  tests:
    name: Unity Actions & Unit Testing
    runs-on: macos-latest
    needs: compile

    steps:
    - name: Checkout Branch
      uses: actions/checkout@v3
      with:
        submodules: recursive
        token: ${{ secrets.GITHUBSERVICETOKEN }}

    - name: Setup Unity Editor
      id: unity-install
      uses: ./.github/actions/chartboost-mediation-unity-ci/setup-unity
      timeout-minutes: 60
      with:
        unity-version: ${{ env.UNITY_VERSION }}
        unity-version-changeset: 8c66806a0c04
        unity-modules:
          android
          ios

    - name: Activate Unity License
      id: activate-unity
      uses: ./.github/actions/chartboost-mediation-unity-ci/run-unity
      with:
        unity-executable-path: ${{ env.UNITY_EXE_PATH }}
        setup-pass: ${{ secrets.SETUP_PASS }}
        serial: ${{ secrets.UNITY_SERIAL }}
        username: ${{ secrets.UNITY_USERNAME }}
        password: ${{ secrets.UNITY_PASSWORD }}

    # Once we add mor platforms maybe we can run this in a matrix? this is fine for now.
    - name: Check for Compiler Errors in Standalone
      id: unity-compile-standalone
      uses: ./.github/actions/chartboost-mediation-unity-ci/run-unity
      with:
        unity-executable-path: ${{ env.UNITY_EXE_PATH }}
        project-path: ${{ env.PROJECT_PATH }}
        target-platform: standalone

    - name: Check for Compiler Errors in Android
      id: unity-compile-android
      uses: ./.github/actions/chartboost-mediation-unity-ci/run-unity
      with:
        unity-executable-path: ${{ env.UNITY_EXE_PATH }}
        project-path: ${{ env.PROJECT_PATH }}
        target-platform: android

    - name: Check for Compiler Errors in iOS
      id: unity-compile-ios
      uses: ./.github/actions/chartboost-mediation-unity-ci/run-unity
      with:
        unity-executable-path: ${{ env.UNITY_EXE_PATH }}
        project-path: ${{ env.PROJECT_PATH }}
        target-platform: ios

    - name: Run Unity Unit Tests
      id: unity-unit-tests
      uses: ./.github/actions/chartboost-mediation-unity-ci/run-unity
      with:
        unity-executable-path: ${{ env.UNITY_EXE_PATH }}
        project-path: ${{ env.PROJECT_PATH }}
        run-tests: true
        test-results: test-results/results.xml
        test-platform: EditMode
        quit: false

    - name: Publish Test Results
      id: publish-test-results
      uses: EnricoMi/publish-unit-test-result-action/composite@v2
      with:
        files: |
          **/results.xml
          
    - name: Cleanup Unity Generated Files
      if: always()
      id: unity-cleanup
      uses: ./.github/actions/chartboost-mediation-unity-ci/cleanup-unity
      with:
        setup-pass: ${{ secrets.SETUP_PASS }}

    - name: Return Unity License
      if: always()
      id: return-unity
      uses: ./.github/actions/chartboost-mediation-unity-ci/run-unity
      with:
        unity-executable-path: ${{ env.UNITY_EXE_PATH }}
        setup-pass: ${{ secrets.SETUP_PASS }}
        username: ${{ secrets.UNITY_USERNAME }}
        password: ${{ secrets.UNITY_PASSWORD }}
        return-license: true
    
    - name : Notify Slack on failure
      if : ${{ failure() }}
      id : notify-slack
      uses: ./.github/actions/chartboost-mediation-unity-ci/notify-slack
      with:
        slack-webhook-url: ${{ secrets.SLACK_NOTIFY_HELIUM_UNITY_SDK_WEBHOOK }}
        workflow-run-id: ${{ github.run_id }}
        workflow-name: ${{ github.workflow }}
        workflow-url: "https://github.com/${{ github.repository }}/actions/runs/${{github.run_id}}"

