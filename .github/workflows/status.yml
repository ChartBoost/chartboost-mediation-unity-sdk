name: Chartboost Mediation Unity SDK

on:
  push:
    tags:
      - '4.*'
  pull_request:
    branches:
      - 'develop'
      - 'main'
      - 'release/*'
  schedule:
    # Scheduled to run Monday - Friday at 9AM UTC which is 2AM PST.
    # * is a special character in YAML so you have to quote this string
    - cron:  '0 9 * * 1-5'
  workflow_dispatch:
    inputs:
      chartboost_mediation_bridge_version:
        description: 'Chartboost Mediation Android Compile Version'
        required: false
        default: null
      only_public:
        description: 'Use only public maven repo'
        required: false
        default: 'false'
env:
  UNITY_VERSION: 2020.3.37f1
  UNITY_EXE_PATH: /Applications/Unity/Hub/Editor/2020.3.37f1/Unity.app/Contents/MacOS/Unity

# Cancels any queued or in-progress runs for this branch.
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  android-bridge:
    name: Compile Android Bridge
    runs-on: ubuntu-latest

    steps:   
    - name: Extract branch name
      id: extract_branch
      shell: bash
      run: echo "branch=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}" >> $GITHUB_OUTPUT    
                
    - name: Checkout Branch
      uses: actions/checkout@v3
      with:
        ref: ${{ steps.extract_branch.outputs.branch }}
        # Using `secrets.GITHUB_TOKEN` ensures that any commit(s) pushed from within this workflow will not 
        # trigger another workflow and thus avoid recursive workflow trigger
        # If we use `secrets.GITHUBSERVICETOKEN` instead it will overwrite the above behaviour and will not prevent
        # recursive workflow
        # https://docs.github.com/en/actions/using-workflows/triggering-a-workflow#triggering-a-workflow-from-a-workflow
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Set Up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: gradle

    - name: Grant Execute Permission for Gradlew
      run: chmod +x ./com.chartboost.mediation/Android~/gradlew

    - name: Build Android Bridge
      run: ./com.chartboost.mediation/Android~/gradlew -p ./com.chartboost.mediation/Android~ githubScript
      env:
        CHARTBOOST_MEDIATION_VERSION: ${{ github.event.inputs.chartboost_mediation_bridge_version }}
        ONLY_PUBLIC: ${{ github.event.inputs.only_public }}
        JFROG_USER: ${{ secrets.JFROG_USER }}
        JFROG_PASS: ${{ secrets.JFROG_PASS }}

    - name: Upload Android Bridge Changes
      continue-on-error: true
      run: |
        git config user.name ${{ secrets.GIT_USER }}
        git config user.email ${{ secrets.GIT_EMAIL }}
        git add com.chartboost.mediation/Runtime/Plugins/Android/chartboost-mediation-android-bridge.jar
        git commit -m "Updating Chartboost Mediation Unity SDK Android Bridge.jar"
        git push --force
  
  nuget:
    name: Build Nuget package
    runs-on: ubuntu-latest

    steps:
    - name: Extract branch name
      id: extract_branch
      shell: bash
      run: echo "branch=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}" >> $GITHUB_OUTPUT      
    
    - name: Checkout Branch
      uses: actions/checkout@v3
      with:
        ref: ${{ steps.extract_branch.outputs.branch }}
        # Using `secrets.GITHUB_TOKEN` ensures that any commit(s) pushed from within this workflow will not 
        # trigger another workflow and thus avoid recursive workflow trigger
        # If we use `secrets.GITHUBSERVICETOKEN` instead it will overwrite the above behaviour and will not prevent
        # recursive workflow
        # https://docs.github.com/en/actions/using-workflows/triggering-a-workflow#triggering-a-workflow-from-a-workflow
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Generate Nuget Package
      run : nuget pack ./com.chartboost.mediation/Chartboost.CSharp.Mediation.Unity.nuspec  -OutputDirectory ./Nuget -NoDefaultExcludes

    - name: Upload Nuget Package
      continue-on-error: true      
      run : |
        git config user.name ${{ secrets.GIT_USER }}
        git config user.email ${{ secrets.GIT_EMAIL }}
        git add Nuget/Chartboost.CSharp.Mediation.Unity*.nupkg   
        git commit -m "Updating Chartboost.CSharp.Mediation.Unity.nupkg"
        git push --force
  
    
  compile-unity-upm:
    name: Compile UPM unity project
    runs-on: macos-latest
    needs: android-bridge

    steps:
    - name: Checkout Branch
      uses: actions/checkout@v3
      with:
        submodules: recursive
        token: ${{ secrets.GITHUBSERVICETOKEN }}
        
    - name: compile-unity
      uses: ./.github/actions/compile-unity
      env:
        PROJECT_PATH: com.chartboost.mediation.demo.upm
      with:
        setup-pass: ${{ secrets.SETUP_PASS }}
        serial: ${{ secrets.UNITY_SERIAL }}
        username: ${{ secrets.UNITY_USERNAME }}
        password: ${{ secrets.UNITY_PASSWORD }}
        slack-webhook: ${{ secrets.SLACK_NOTIFY_HELIUM_UNITY_SDK_WEBHOOK }}      

  
  compile-unity-nuget:
    name: Compile Nuget unity project
    timeout-minutes: 60
    runs-on: macos-latest
    needs: [android-bridge, nuget]

    steps:
    - name: Checkout Branch
      uses: actions/checkout@v3
      with:
        submodules: recursive
        token: ${{ secrets.GITHUBSERVICETOKEN }}

    - name: Setup Dotnet
      uses: actions/setup-dotnet@v3

    - name: Install Nuget package
      run : |
        dotnet new tool-manifest
        dotnet tool install NuGetForUnity.Cli
        dotnet nugetforunity restore com.chartboost.mediation.demo.nuget
        
    - name: compile-unity
      timeout-minutes: 25
      uses: ./.github/actions/compile-unity
      env:
        PROJECT_PATH: com.chartboost.mediation.demo.nuget
      with:
        setup-pass: ${{ secrets.SETUP_PASS }}
        serial: ${{ secrets.UNITY_SERIAL }}
        username: ${{ secrets.UNITY_USERNAME }}
        password: ${{ secrets.UNITY_PASSWORD }}
        slack-webhook: ${{ secrets.SLACK_NOTIFY_HELIUM_UNITY_SDK_WEBHOOK }}

