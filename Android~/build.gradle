
buildscript {
    repositories {
        google()
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:7.1.3'
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

ext {
    gitHubTag = System.getenv("GITHUB_REF");
    gitHubCommit = System.getenv("GITHUB_SHA");

    isReleaseCandidate = gitHubTag ==~ /\d+\.\d+\.\d+(\.?[A-Za-z0-9]+)*-rc\d+/
    isInternalRelease = gitHubTag ==~ /\d+\.\d+\.\d+(\.?[A-Za-z0-9]+)+/
    isPublicRelease = gitHubTag ==~ /\d+\.\d+\.\d+/

    unitySdkVersion = (gitHubTag != null && gitHubTag != "") ? gitHubTag.find(/^\d+\.\d+\.\d+(\.?[A-Za-z0-9]+)*/) : "0.0.0"

    buildArtifactsDir = "$rootDir/BuildArtifacts"
    unityBuildArtifactsDir = "$buildArtifactsDir/unity-helium-sdk"
}

task ci(dependsOn: 'sdk') {}

task githubScript {
    println()
    println ("isInternalRelease = "+ isInternalRelease + ", " +
            "isReleaseCandidate = "+ isReleaseCandidate + ", " +
            "isPublicRelease = "+ isPublicRelease)
    println()
    println ("githubTag (GITHUB_TAG) = "+ gitHubTag + ", " +
            "gitHubCommit (GITHUB_COMMIT) = "+ gitHubCommit)
    println()
    println ("unitySdkVersion = "+ unitySdkVersion)

//    if (isInternalRelease) {
//        dependsOn 'downloadSdk'
//    } else if (isPublicRelease) {
//        dependsOn 'downloadSdk'
//        dependsOn 'prepareForS3Deploy'
//    } else {
//        dependsOn 'sdk'
//    }
}

task buildBridge {
    dependsOn ':helium-android-bridge:clean'
    dependsOn ':helium-android-bridge:lint'
    dependsOn ':helium-android-bridge:build'
    dependsOn ':helium-android-bridge:copyReleaseAndroidBridgeForPackaging'
}
